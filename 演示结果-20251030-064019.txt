

           Docker 和本地代码关系 - 实际演示结果               



  Windows 本地（你的电脑 C:\Code\strongswan\）                
                                                               
   src/                                                      
      libstrongswan/    [1308 个 C 文件]                   
      libcharon/         源代码在这里                      
      ...                用于开发和修改                    
                                                               
   config/swanctl/                                           
      swanctl.conf                     
                                                              
   logs/                               
                                                             
   Dockerfile             构建配方                         
   docker-compose.yml     启动配置                         
                                                             
   VSCode                 你在这里编辑                     
                                                             

                                                 
                    卷挂载（双向同步）             
                                                 

  Docker 容器（strongswan）                                    
  Ubuntu 22.04 Linux                                         
                                                             
   /etc/swanctl/                       
      swanctl.conf       和本地是同一个文件                
                                                              
   /var/log/                          
      charon.log         写入会同步到本地                  
                                                               
   /usr/local/strongswan/                                    
      bin/swanctl        编译好的管理工具                  
      libexec/ipsec/                                        
          charon         正在运行的程序 (126 KB)           
                              PID: 1                           
                              运行中                          
                                                               
   /tmp/strongswan-5.9.6/  源代码已删除（编译后清理）       
                                                               
   编译环境:                                                 
      gcc, make          构建时使用                        
      OpenSSL 3.0.2      运行时依赖                        
      Ubuntu packages    系统库                            
                                                               




 关键数据:

   配置文件同步:
     C:\Code\strongswan\config\swanctl\swanctl.conf
        (双向同步)
     容器:/etc/swanctl/swanctl.conf
     
   日志文件同步:
     C:\Code\strongswan\logs\
        (双向同步)
     容器:/var/log/
     
   源代码不同步:
     本地: 1308 个 C 文件（src/目录）
     容器: 无源代码（只有编译结果）
     
   编译结果在容器:
     容器:/usr/local/strongswan/libexec/ipsec/charon
     本地: 无（不需要）



 工作流程总结:

  1. 修改配置文件（最常用）
     VSCode 编辑 config\swanctl\swanctl.conf
      自动同步到容器
      docker exec strongswan swanctl --load-all
       配置生效
     
  2. 查看日志
     容器写日志 /var/log/charon.log
      自动同步到本地 logs\charon.log
      VSCode 中查看
     或 docker logs strongswan
     
  3. 修改源代码（国密集成时）
     VSCode 编辑 src\libstrongswan\crypto\xxx.c
       不会自动到容器
      需要 docker-compose build（重新编译）
      docker-compose up -d --force-recreate
       新代码生效



 关键理解:

   VSCode 在 Windows 本地运行
   strongSwan 在 Docker 容器内运行
   配置文件通过卷挂载共享
   编译在容器内完成
   你不需要在本地安装 Linux 或编译环境！



